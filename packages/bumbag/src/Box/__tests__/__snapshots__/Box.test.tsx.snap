// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`composition hook should return with box props 1`] = `
Object {
  "className": "css-63it0p css-1qnz8fc bb-Box",
}
`;

exports[`composition render props should render correctly 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

<p
  class="emotion-0 emotion-1 bb-Box"
>
  Hello world
</p>
`;

exports[`composition use should render correctly 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

<p
  class="emotion-0 emotion-1 bb-Box"
>
  Hello world
</p>
`;

exports[`composition use should render correctly for a Button component with props 1`] = `
.emotion-0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: var(--bb-palette-default, #000000);
  border-radius: 6px;
  color: var(--bb-palette-defaultInverted, #000000);
  fill: var(--bb-palette-defaultInverted, #000000);
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-weight: 600;
  min-height: 2.75rem;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  padding: 0 1rem;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-hyphens: auto;
  -moz-hyphens: auto;
  -ms-hyphens: auto;
  hyphens: auto;
  -webkit-transition: box-shadow 0.1s ease-in-out 0s,border 0.1s,background-color 0.1s;
  transition: box-shadow 0.1s ease-in-out 0s,border 0.1s,background-color 0.1s;
  border: 1px solid var(--bb-palette-white900, #000000);
}

.emotion-0[disabled],
.emotion-0[aria-disabled="true"] {
  cursor: not-allowed;
  opacity: 0.7;
  outline: unset;
  pointer-events: unset;
}

.emotion-0:focus {
  outline: unset;
  z-index: 2;
  box-shadow: var(--bb-palette-gray200, #000000) 0px 0px 0px 1px,var(--bb-palette-gray100, #000000) 0px 0px 0px 3px;
  border-color: transparent;
}

.emotion-0:hover {
  background-color: var(--bb-palette-white600, #000000);
}

.emotion-0:hover:active {
  background-color: var(--bb-palette-white800, #000000);
}

.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-3 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: var(--bb-palette-primary, #000000);
  border-radius: 6px;
  color: var(--bb-palette-primaryInverted, #000000);
  fill: var(--bb-palette-primaryInverted, #000000);
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-weight: 600;
  min-height: 2.75rem;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  padding: 0 1rem;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-hyphens: auto;
  -moz-hyphens: auto;
  -ms-hyphens: auto;
  hyphens: auto;
  -webkit-transition: box-shadow 0.1s ease-in-out 0s,border 0.1s,background-color 0.1s;
  transition: box-shadow 0.1s ease-in-out 0s,border 0.1s,background-color 0.1s;
}

.emotion-3[disabled],
.emotion-3[aria-disabled="true"] {
  cursor: not-allowed;
  opacity: 0.7;
  outline: unset;
  pointer-events: unset;
}

.emotion-3:focus {
  outline: unset;
  z-index: 2;
  box-shadow: var(--bb-palette-primary, #000000) 0px 0px 0px 1px,var(--bb-palette-primary200, #000000) 0px 0px 0px 3px;
}

.emotion-3:hover {
  background-color: var(--bb-palette-primary600, #000000);
}

.emotion-3:hover:active {
  background-color: var(--bb-palette-primary700, #000000);
}

.emotion-3 {
  background-color: var(--bb-palette-default, #000000);
  border: 1px solid var(--bb-palette-primary, #000000);
  color: var(--bb-palette-primary, #000000);
  fill: var(--bb-palette-primary, #000000);
  box-shadow: unset;
}

.emotion-3:hover {
  border-color: var(--bb-palette-primary, #000000);
  background-color: var(--bb-palette-primaryTint, #000000);
}

.emotion-3:hover:active {
  border-color: var(--bb-palette-primary, #000000);
  background-color: var(--bb-palette-primary100, #000000);
}

<button
  class="emotion-0 emotion-1 emotion-2 emotion-3 bb-Box bb-Button"
  type="button"
>
  Hello world
</button>
`;

exports[`defaultProps should render correctly 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

<div
  class="emotion-0 emotion-1 test bb-Box"
>
  hello world
</div>
`;

exports[`modes correctly assigns a ref for applyTheme 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  box-shadow: 0px 1px 4px 0px rgba(0, 0, 0, 0.15),0px 0px 2px 1px rgba(0, 0, 0, 0.02);
  padding: 1rem!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`modes renders correctly for applyTheme 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  box-shadow: 0px 1px 4px 0px rgba(0, 0, 0, 0.15),0px 0px 2px 1px rgba(0, 0, 0, 0.02);
  color: var(--bb-palette-red, #ff0000)!important;
  padding: 1rem!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`modes renders correctly for applyTheme 2`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  box-shadow: 0px 1px 4px 0px rgba(0, 0, 0, 0.15),0px 0px 2px 1px rgba(0, 0, 0, 0.02);
  color: var(--bb-palette-red, #ff0000)!important;
  padding: 1rem!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`modes should render correctly when colorMode is set globally 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

<div
  class="emotion-0 emotion-1 bb-Box"
>
  hello world
</div>
`;

exports[`modes should render correctly when colorMode is set globally 2`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

<div
  class="emotion-0 emotion-1 bb-Box"
>
  hello world
</div>
`;

exports[`modes should render correctly when colorMode set as prop 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-0 {
  background-color: var(--bb-palette-red, #ff0000);
}

.emotion-1 {
  color: var(--bb-palette-primaryTint, #000000)!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
>
  hello world
</div>
`;

exports[`modes should render correctly when colorMode set as prop 2`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-0 {
  background-color: var(--bb-palette-red, #ff0000);
}

.emotion-1 {
  color: var(--bb-palette-primaryTint, #000000)!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
>
  hello world
</div>
`;

exports[`props gradients should render correctly for _focus 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  background-image: linear-gradient(to right,var(--bb-palette-primary, #000000), var(--bb-palette-secondary, #000000));
}

.emotion-1:focus {
  gradient-to: red!important;
}

.emotion-1:focus {
  background-image: linear-gradient(to right,var(--bb-palette-primary, #000000), var(--bb-palette-red, #ff0000));
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props gradients should render correctly for _hover 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  background-image: linear-gradient(to right,var(--bb-palette-primary, #000000), var(--bb-palette-secondary, #000000));
}

.emotion-1:hover {
  gradient-to: red!important;
}

.emotion-1:hover {
  background-image: linear-gradient(to right,var(--bb-palette-primary, #000000), var(--bb-palette-red, #ff0000));
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props gradients should render correctly for _hoveractive 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  background-image: linear-gradient(to right,var(--bb-palette-primary, #000000), var(--bb-palette-secondary, #000000));
}

.emotion-1:hover:active {
  gradient-to: red!important;
}

.emotion-1:hover:active {
  background-image: linear-gradient(to right,var(--bb-palette-primary, #000000), var(--bb-palette-red, #ff0000));
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props gradients should render correctly for a basic gradient 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  background-image: linear-gradient(to right,var(--bb-palette-primary, #000000), var(--bb-palette-secondary, #000000));
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props gradients should render correctly for a gradient with direction of bottom 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  background-image: linear-gradient(to bottom,var(--bb-palette-primary, #000000), var(--bb-palette-secondary, #000000));
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props gradients should render correctly for a gradient with direction of bottom left 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  background-image: linear-gradient(to bottom left,var(--bb-palette-primary, #000000), var(--bb-palette-secondary, #000000));
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props gradients should render correctly for a gradient with direction of bottom right 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  background-image: linear-gradient(to bottom right,var(--bb-palette-primary, #000000), var(--bb-palette-secondary, #000000));
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props gradients should render correctly for a gradient with direction of left 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  background-image: linear-gradient(to left,var(--bb-palette-primary, #000000), var(--bb-palette-secondary, #000000));
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props gradients should render correctly for a gradient with direction of right 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  background-image: linear-gradient(to right,var(--bb-palette-primary, #000000), var(--bb-palette-secondary, #000000));
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props gradients should render correctly for a gradient with direction of top 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  background-image: linear-gradient(to top,var(--bb-palette-primary, #000000), var(--bb-palette-secondary, #000000));
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props gradients should render correctly for a gradient with direction of top left 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  background-image: linear-gradient(to top left,var(--bb-palette-primary, #000000), var(--bb-palette-secondary, #000000));
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props gradients should render correctly for a gradient with direction of top right 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  background-image: linear-gradient(to top right,var(--bb-palette-primary, #000000), var(--bb-palette-secondary, #000000));
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props gradients should render correctly for a gradient with gradientVia 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  background-image: linear-gradient(to right,var(--bb-palette-primary, #000000),var(--bb-palette-red, #ff0000), var(--bb-palette-secondary, #000000));
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props gradients should render correctly for a gradient with stops 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  background-image: linear-gradient(to right,var(--bb-palette-primary, #000000) 0%,var(--bb-palette-red, #ff0000) 80%, var(--bb-palette-secondary, #000000) 100%);
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props gradients should render correctly for responsive gradients 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  background-image: linear-gradient(to right,var(--bb-palette-primary, #000000), var(--bb-palette-secondary, #000000));
}

@media screen and (min-width: 0px) and (max-width: 479px) {
  .emotion-1 {
    background-image: linear-gradient(to bottom,var(--bb-palette-primary, #000000), var(--bb-palette-success, #000000));
  }
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should assign a ref 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

<div
  class="emotion-0 emotion-1 bb-Box"
>
  Hello world
</div>
`;

exports[`props should render correctly 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly for a borderRadius of 0 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  border-radius: 0px!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly for a borderRadius of 1 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  border-radius: 2px!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly for a borderRadius of 2 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  border-radius: 4px!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly for a borderRadius of 3 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  border-radius: 6px!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly for a borderRadius of 4 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  border-radius: 8px!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly for a borderRadius of 5 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  border-radius: 16px!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly for a borderRadius of 6 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  border-radius: 32px!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly for a borderRadius of default 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  border-radius: 6px!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly for a custom border 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  border: 1px solid var(--bb-palette-white800, #000000)!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly for an alignX of center 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly for an alignX of left 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly for an alignX of right 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly for an alignY of bottom 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  -webkit-justify-content: flex-end;
  justify-content: flex-end;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly for an alignY of center 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly for an alignY of top 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  -webkit-justify-content: flex-start;
  justify-content: flex-start;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly for an altitude 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  box-shadow: 0px 6px 24px 0px rgba(0, 0, 0, 0.15),0px 0px 12px 6px rgba(0, 0, 0, 0.02);
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly with CSS props 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  background-color: var(--bb-palette-red, #ff0000)!important;
  color: var(--bb-palette-white, #ffffff)!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly with CSS props 2`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  background-color: rgb(255, 0, 0)!important;
  color: rgba(0, 255, 0, 0.1)!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly with CSS props with active 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1:active {
  background-color: var(--bb-palette-primary, #000000)!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly with CSS props with breakpoints 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  background-color: var(--bb-palette-primary, #000000)!important;
}

@media screen and (min-width: 0px) and (max-width: 479px) {
  .emotion-1 {
    background-color: var(--bb-palette-secondary, #000000)!important;
  }
}

@media screen and (min-width: 768px) and (max-width: 1023px) {
  .emotion-1 {
    background-color: var(--bb-palette-red, #ff0000)!important;
  }
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly with CSS props with breakpoints 2`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  background-color: var(--bb-palette-primary, #000000)!important;
}

@media screen and (max-width: 767px) {
  .emotion-1 {
    background-color: var(--bb-palette-secondary, #000000)!important;
  }
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly with CSS props with breakpoints 3`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  background-color: var(--bb-palette-primary, #000000)!important;
}

@media screen and (min-width: 768px) {
  .emotion-1 {
    background-color: var(--bb-palette-secondary, #000000)!important;
  }
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly with CSS props with disabled 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1:disabled {
  background-color: var(--bb-palette-primary, #000000)!important;
}

<button
  class="emotion-0 emotion-1 bb-Box"
  disabled=""
/>
`;

exports[`props should render correctly with CSS props with focus 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1:focus {
  background-color: var(--bb-palette-primary, #000000)!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly with CSS props with group active 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

[role=group]:active .emotion-3 {
  background-color: var(--bb-palette-primary, #000000)!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
  role="group"
>
  <div
    class="emotion-0 emotion-3 bb-Box"
  />
</div>
`;

exports[`props should render correctly with CSS props with group disabled 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

[role=group]:disabled .emotion-3 {
  background-color: var(--bb-palette-primary, #000000)!important;
}

<button
  class="emotion-0 emotion-1 bb-Box"
  disabled=""
  role="group"
>
  <div
    class="emotion-0 emotion-3 bb-Box"
  />
</button>
`;

exports[`props should render correctly with CSS props with group focus 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

[role=group]:focus .emotion-3 {
  background-color: var(--bb-palette-primary, #000000)!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
  role="group"
>
  <div
    class="emotion-0 emotion-3 bb-Box"
  />
</div>
`;

exports[`props should render correctly with CSS props with group hover 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

[role=group]:hover .emotion-3 {
  background-color: var(--bb-palette-primary, #000000)!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
  role="group"
>
  <div
    class="emotion-0 emotion-3 bb-Box"
  />
</div>
`;

exports[`props should render correctly with CSS props with group hover 2`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

[role=group]:hover .emotion-3 {
  background-color: var(--bb-palette-primary, #000000)!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
  role="group"
>
  <div
    class="emotion-0 emotion-3 bb-Box"
  />
</div>
`;

exports[`props should render correctly with CSS props with group visited 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

[role=group]:visited .emotion-3 {
  background-color: var(--bb-palette-primary, #000000)!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
  role="group"
>
  <div
    class="emotion-0 emotion-3 bb-Box"
  />
</div>
`;

exports[`props should render correctly with CSS props with hover 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1:hover {
  background-color: var(--bb-palette-primary, #000000)!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly with CSS props with hoveractive 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1:hover:active {
  background-color: var(--bb-palette-primary, #000000)!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly with CSS props with visited 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1:visited {
  background-color: var(--bb-palette-primary, #000000)!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly with a color CSS prop 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  background-color: var(--bb-palette-white900, #000000)!important;
  color: var(--bb-palette-primary, #000000)!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly with a font CSS prop 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  font-family: system-ui,-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,Oxygen,Ubuntu,Cantarell,'Fira Sans','Droid Sans','Helvetica Neue',sans-serif!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly with a font size CSS prop 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  font-size: 1.5rem!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly with a font weight CSS prop 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  font-weight: 600!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly with a fontFamily CSS prop 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  font-family: system-ui,-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,Oxygen,Ubuntu,Cantarell,'Fira Sans','Droid Sans','Helvetica Neue',sans-serif!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly with a spacing CSS prop (marginX, paddingX) 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  margin-left: 2rem!important;
  margin-right: 2rem!important;
  padding-left: 1rem!important;
  padding-right: 1rem!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly with a spacing CSS prop (marginY, paddingY) 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  margin-top: 2rem!important;
  margin-bottom: 2rem!important;
  padding-top: 1rem!important;
  padding-bottom: 1rem!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly with a spacing CSS prop 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  margin: 2rem!important;
  padding-left: 1rem!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly with a spacing CSS prop 2`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  margin: 4rem!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly with aria* props 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

<div
  aria-label="hello"
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly with negative spacing CSS props 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  margin: -2rem!important;
  padding-left: -1rem!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly with negative spacing CSS props 2`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  margin: -4rem!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`props should render correctly with overrides 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-0 {
  background-color: var(--bb-palette-red, #ff0000);
}

<div
  class="emotion-0 emotion-1 bb-Box"
/>
`;

exports[`theming Box.base should render correctly 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-0 {
  background-color: var(--bb-palette-red, #ff0000);
}

<div
  class="emotion-0 emotion-1 bb-Box"
>
  hello world
</div>
`;

exports[`theming Box.base should render correctly 2`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-0 {
  background-color: rgb(255, 0, 0);
  color: rgba(0, 255, 0, 0.1);
}

<div
  class="emotion-0 emotion-1 bb-Box"
>
  hello world
</div>
`;

exports[`theming Box.base should render correctly 3`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-0 {
  background-color: var(--bb-palette-green, #008000);
}

.emotion-1 {
  color: var(--bb-palette-green, #008000)!important;
}

<div
  class="emotion-0 emotion-1 bb-Box"
>
  hello world
</div>
`;

exports[`variants styles.base should render correctly 1`] = `
.emotion-0 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-0:focus:not(:focus-visible) {
  outline: none;
}

.emotion-0 {
  background-color: var(--bb-palette-red, #ff0000);
}

<div
  class="emotion-0 emotion-1 bb-Box"
>
  hello world
</div>
`;
