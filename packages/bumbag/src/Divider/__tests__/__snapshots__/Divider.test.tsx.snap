// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`composition as should render correctly 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-0 {
  border: 1px solid #e6e6eb;
  border-width: 0 0 1px 0;
  padding: 0;
  width: auto;
  height: 0;
}

.emotion-0[aria-orientation="vertical"] {
  border-width: 0 1px 0 0;
  width: 0;
  height: auto;
}

<div
  aria-orientation="horizontal"
  class="emotion-0 emotion-1 emotion-2 fp-Box fp-Divider"
  role="separator"
/>
`;

exports[`composition hook should return with Divider props 1`] = `
Object {
  "aria-orientation": "horizontal",
  "children": undefined,
  "className": "css-1vdoif7 css-4lfl7m css-1yuzjtp fp-Box fp-Divider",
  "role": "separator",
}
`;

exports[`composition render props should render correctly 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-0 {
  border: 1px solid #e6e6eb;
  border-width: 0 0 1px 0;
  padding: 0;
  width: auto;
  height: 0;
}

.emotion-0[aria-orientation="vertical"] {
  border-width: 0 1px 0 0;
  width: 0;
  height: auto;
}

<hr
  aria-orientation="horizontal"
  class="emotion-0 emotion-1 emotion-2 fp-Box fp-Divider"
  role="separator"
/>
`;

exports[`defaultProps should render correctly for className 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-0 {
  border: 1px solid #e6e6eb;
  border-width: 0 0 1px 0;
  padding: 0;
  width: auto;
  height: 0;
}

.emotion-0[aria-orientation="vertical"] {
  border-width: 0 1px 0 0;
  width: 0;
  height: auto;
}

.emotion-2 {
  border-color: #574feb !important;
}

<hr
  aria-orientation="horizontal"
  class="emotion-0 emotion-1 emotion-2 test fp-Box fp-Divider"
  role="separator"
/>
`;

exports[`props should render correctly 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-0 {
  border: 1px solid #e6e6eb;
  border-width: 0 0 1px 0;
  padding: 0;
  width: auto;
  height: 0;
}

.emotion-0[aria-orientation="vertical"] {
  border-width: 0 1px 0 0;
  width: 0;
  height: auto;
}

<hr
  aria-orientation="horizontal"
  class="emotion-0 emotion-1 emotion-2 fp-Box fp-Divider"
  role="separator"
/>
`;

exports[`props should render correctly for vertical orientation 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-0 {
  border: 1px solid #e6e6eb;
  border-width: 0 0 1px 0;
  padding: 0;
  width: auto;
  height: 0;
}

.emotion-0[aria-orientation="vertical"] {
  border-width: 0 1px 0 0;
  width: 0;
  height: auto;
}

<hr
  aria-orientation="vertical"
  class="emotion-0 emotion-1 emotion-2 fp-Box fp-Divider"
  role="separator"
/>
`;

exports[`props should render correctly with CSS props 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-0 {
  border: 1px solid #e6e6eb;
  border-width: 0 0 1px 0;
  padding: 0;
  width: auto;
  height: 0;
}

.emotion-0[aria-orientation="vertical"] {
  border-width: 0 1px 0 0;
  width: 0;
  height: auto;
}

.emotion-2 {
  border-color: #574feb !important;
}

<hr
  aria-orientation="horizontal"
  class="emotion-0 emotion-1 emotion-2 fp-Box fp-Divider"
  role="separator"
/>
`;

exports[`theming Divider.base should render correctly 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-0 {
  border: 1px solid #e6e6eb;
  border-width: 0 0 1px 0;
  padding: 0;
  width: auto;
  height: 0;
}

.emotion-0[aria-orientation="vertical"] {
  border-width: 0 1px 0 0;
  width: 0;
  height: auto;
}

.emotion-0.emotion-0 {
  border-color: #ff0000;
}

<hr
  aria-orientation="horizontal"
  class="emotion-0 emotion-1 emotion-2 fp-Box fp-Divider"
  role="separator"
/>
`;

exports[`theming Divider.vertical.base should render correctly 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-0 {
  border: 1px solid #e6e6eb;
  border-width: 0 0 1px 0;
  padding: 0;
  width: auto;
  height: 0;
}

.emotion-0[aria-orientation="vertical"] {
  border-width: 0 1px 0 0;
  width: 0;
  height: auto;
}

.emotion-0[aria-orientation="vertical"].emotion-0[aria-orientation="vertical"] {
  border-color: #ff0000;
}

<hr
  aria-orientation="horizontal"
  class="emotion-0 emotion-1 emotion-2 fp-Box fp-Divider"
  role="separator"
/>
`;
