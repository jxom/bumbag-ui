// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`composition as should render correctly 1`] = `
.emotion-2 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-2:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-0 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.5rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-0:last-child {
  margin-bottom: -0.5rem;
}

<p
  class="emotion-0 emotion-1 emotion-2 emotion-3 fp-Box fp-Flex fp-Columns"
>
  Hello world
</p>
`;

exports[`composition hook should return with Columns props 1`] = `
Object {
  "children": <Context.Provider
    value={
      Object {
        "isGapless": false,
        "minBreakpoint": undefined,
        "spacing": "major-2",
      }
    }
  />,
  "className": "css-yadc87 css-1k1yp07 css-1pwrqjj css-1yuzjtp fp-Box fp-Flex fp-Columns",
}
`;

exports[`composition render props should render correctly 1`] = `
.emotion-2 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-2:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-0 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.5rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-0:last-child {
  margin-bottom: -0.5rem;
}

<div
  class="emotion-0 emotion-1 emotion-2 emotion-3 fp-Box fp-Flex fp-Columns"
>
  Hello world
</div>
`;

exports[`defaultProps should render correctly for className 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-13 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-12 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.5rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-12:last-child {
  margin-bottom: -0.5rem;
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

@media (max-width:768px) {
  .emotion-0 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 100%;
  }
}

<div
  class="emotion-12 emotion-13 emotion-1 emotion-2 test fp-Box fp-Flex fp-Columns"
>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
</div>
`;

exports[`overrides Columns.Column.base should render correctly 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-13 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-12 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.5rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-12:last-child {
  margin-bottom: -0.5rem;
}

.emotion-3 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

@media (max-width:768px) {
  .emotion-3 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 100%;
  }
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

@media (max-width:768px) {
  .emotion-0 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 100%;
  }
}

.emotion-0 {
  background-color: #ff0000;
}

<div
  class="emotion-12 emotion-13 emotion-1 emotion-2 fp-Box fp-Flex fp-Columns"
>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-3 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-3 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-3 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
</div>
`;

exports[`overrides Columns.base should render correctly 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-13 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

@media (max-width:768px) {
  .emotion-0 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 100%;
  }
}

.emotion-12 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.5rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-12:last-child {
  margin-bottom: -0.5rem;
}

.emotion-12 {
  background-color: #ff0000;
}

<div
  class="emotion-12 emotion-13 emotion-1 emotion-2 fp-Box fp-Flex fp-Columns"
>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
</div>
`;

exports[`props basic offsets renders correctly for a spread offset of "both" 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-6 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.5rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-6:last-child {
  margin-bottom: -0.5rem;
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

.emotion-0 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  width: 50%;
}

@media screen and (max-width:767px) {
  .emotion-0 {
    width: 100%;
  }
}

@media screen and (max-width:479px) {
  .emotion-0 {
    width: 100%;
  }
}

.emotion-3 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

.emotion-3 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  width: 16.666666666666664%;
}

@media screen and (max-width:767px) {
  .emotion-3 {
    width: 100%;
  }
}

@media screen and (max-width:479px) {
  .emotion-3 {
    width: 100%;
  }
}

.emotion-3 {
  margin-left: auto;
  margin-right: auto;
}

<div
  class="emotion-6 emotion-7 emotion-1 emotion-2 fp-Box fp-Flex fp-Columns"
>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-3 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
</div>
`;

exports[`props basic offsets renders correctly for a spread offset of "left" 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-6 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.5rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-6:last-child {
  margin-bottom: -0.5rem;
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

.emotion-0 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  width: 50%;
}

@media screen and (max-width:767px) {
  .emotion-0 {
    width: 100%;
  }
}

@media screen and (max-width:479px) {
  .emotion-0 {
    width: 100%;
  }
}

.emotion-3 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

.emotion-3 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  width: 16.666666666666664%;
}

@media screen and (max-width:767px) {
  .emotion-3 {
    width: 100%;
  }
}

@media screen and (max-width:479px) {
  .emotion-3 {
    width: 100%;
  }
}

.emotion-3 {
  margin-left: auto;
}

<div
  class="emotion-6 emotion-7 emotion-1 emotion-2 fp-Box fp-Flex fp-Columns"
>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-3 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
</div>
`;

exports[`props basic offsets renders correctly for a spread offset of "right" 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-6 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.5rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-6:last-child {
  margin-bottom: -0.5rem;
}

.emotion-3 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

.emotion-3 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  width: 50%;
}

@media screen and (max-width:767px) {
  .emotion-3 {
    width: 100%;
  }
}

@media screen and (max-width:479px) {
  .emotion-3 {
    width: 100%;
  }
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

.emotion-0 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  width: 16.666666666666664%;
}

@media screen and (max-width:767px) {
  .emotion-0 {
    width: 100%;
  }
}

@media screen and (max-width:479px) {
  .emotion-0 {
    width: 100%;
  }
}

.emotion-0 {
  margin-right: auto;
}

<div
  class="emotion-6 emotion-7 emotion-1 emotion-2 fp-Box fp-Flex fp-Columns"
>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-3 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
</div>
`;

exports[`props basic offsets renders correctly for a spread offset of values between 1 and 11 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-6 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.5rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-6:last-child {
  margin-bottom: -0.5rem;
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

.emotion-0 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  width: 50%;
}

@media screen and (max-width:767px) {
  .emotion-0 {
    width: 100%;
  }
}

@media screen and (max-width:479px) {
  .emotion-0 {
    width: 100%;
  }
}

.emotion-3 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

.emotion-3 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  width: 25%;
}

@media screen and (max-width:767px) {
  .emotion-3 {
    width: 100%;
  }
}

@media screen and (max-width:479px) {
  .emotion-3 {
    width: 100%;
  }
}

.emotion-3 {
  margin-left: 25%;
}

@media screen and (max-width:767px) {
  .emotion-3 {
    margin-left: 0;
  }
}

@media screen and (max-width:479px) {
  .emotion-3 {
    margin-left: 0;
  }
}

<div
  class="emotion-6 emotion-7 emotion-1 emotion-2 fp-Box fp-Flex fp-Columns"
>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-3 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
</div>
`;

exports[`props should render correctly 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-13 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-12 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.5rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-12:last-child {
  margin-bottom: -0.5rem;
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

@media (max-width:768px) {
  .emotion-0 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 100%;
  }
}

<div
  class="emotion-12 emotion-13 emotion-1 emotion-2 fp-Box fp-Flex fp-Columns"
>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
</div>
`;

exports[`props should render correctly for an alignX of center 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-12 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.5rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-12:last-child {
  margin-bottom: -0.5rem;
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

@media (max-width:768px) {
  .emotion-0 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 100%;
  }
}

.emotion-15 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-13 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-13.emotion-13 {
  -webkit-flex-direction: unset;
  -ms-flex-direction: unset;
  flex-direction: unset;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: unset;
  -webkit-box-align: unset;
  -ms-flex-align: unset;
  align-items: unset;
}

<div
  class="emotion-12 emotion-13 emotion-1 emotion-15 fp-Box fp-Flex fp-Columns"
>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
</div>
`;

exports[`props should render correctly for an alignX of left 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-12 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.5rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-12:last-child {
  margin-bottom: -0.5rem;
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

@media (max-width:768px) {
  .emotion-0 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 100%;
  }
}

.emotion-15 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.emotion-13 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-13.emotion-13 {
  -webkit-flex-direction: unset;
  -ms-flex-direction: unset;
  flex-direction: unset;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-items: unset;
  -webkit-box-align: unset;
  -ms-flex-align: unset;
  align-items: unset;
}

<div
  class="emotion-12 emotion-13 emotion-1 emotion-15 fp-Box fp-Flex fp-Columns"
>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
</div>
`;

exports[`props should render correctly for an alignX of right 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-12 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.5rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-12:last-child {
  margin-bottom: -0.5rem;
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

@media (max-width:768px) {
  .emotion-0 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 100%;
  }
}

.emotion-15 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
}

.emotion-13 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-13.emotion-13 {
  -webkit-flex-direction: unset;
  -ms-flex-direction: unset;
  flex-direction: unset;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  -webkit-align-items: unset;
  -webkit-box-align: unset;
  -ms-flex-align: unset;
  align-items: unset;
}

<div
  class="emotion-12 emotion-13 emotion-1 emotion-15 fp-Box fp-Flex fp-Columns"
>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
</div>
`;

exports[`props should render correctly for an alignY of bottom 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-12 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.5rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-12:last-child {
  margin-bottom: -0.5rem;
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

@media (max-width:768px) {
  .emotion-0 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 100%;
  }
}

.emotion-15 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.emotion-13 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-13.emotion-13 {
  -webkit-flex-direction: unset;
  -ms-flex-direction: unset;
  flex-direction: unset;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-box-pack: unset;
  -webkit-justify-content: unset;
  -ms-flex-pack: unset;
  justify-content: unset;
}

<div
  class="emotion-12 emotion-13 emotion-1 emotion-15 fp-Box fp-Flex fp-Columns"
>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
</div>
`;

exports[`props should render correctly for an alignY of center 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-12 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.5rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-12:last-child {
  margin-bottom: -0.5rem;
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

@media (max-width:768px) {
  .emotion-0 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 100%;
  }
}

.emotion-15 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.emotion-13 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-13.emotion-13 {
  -webkit-flex-direction: unset;
  -ms-flex-direction: unset;
  flex-direction: unset;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: unset;
  -webkit-justify-content: unset;
  -ms-flex-pack: unset;
  justify-content: unset;
}

<div
  class="emotion-12 emotion-13 emotion-1 emotion-15 fp-Box fp-Flex fp-Columns"
>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
</div>
`;

exports[`props should render correctly for an alignY of top 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-12 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.5rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-12:last-child {
  margin-bottom: -0.5rem;
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

@media (max-width:768px) {
  .emotion-0 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 100%;
  }
}

.emotion-15 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.emotion-13 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-13.emotion-13 {
  -webkit-flex-direction: unset;
  -ms-flex-direction: unset;
  flex-direction: unset;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  -webkit-box-pack: unset;
  -webkit-justify-content: unset;
  -ms-flex-pack: unset;
  justify-content: unset;
}

<div
  class="emotion-12 emotion-13 emotion-1 emotion-15 fp-Box fp-Flex fp-Columns"
>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
</div>
`;

exports[`props should render correctly when isGapless = true 1`] = `
.emotion-2 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-2:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-0 {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

<div
  class="emotion-0 emotion-1 emotion-2 emotion-3 fp-Box fp-Flex fp-Columns"
>
  Hello world
</div>
`;

exports[`props should render correctly when isOneLine = true 1`] = `
.emotion-2 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-2:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-0 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.5rem;
}

.emotion-0:last-child {
  margin-bottom: -0.5rem;
}

@media screen and (max-width:767px) {
  .emotion-0 {
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
  }
}

<div
  class="emotion-0 emotion-1 emotion-2 emotion-3 fp-Box fp-Flex fp-Columns"
>
  Hello world
</div>
`;

exports[`props should render correctly when isOneLine = true and minBreakpoint = mobile 1`] = `
.emotion-2 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-2:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-0 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.5rem;
}

.emotion-0:last-child {
  margin-bottom: -0.5rem;
}

<div
  class="emotion-0 emotion-1 emotion-2 emotion-3 fp-Box fp-Flex fp-Columns"
>
  Hello world
</div>
`;

exports[`props should render correctly when isOneLine = true and minBreakpoint = tablet 1`] = `
.emotion-2 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-2:focus:not(:focus-visible) {
  outline: none;
}

.emotion-1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-0 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.5rem;
}

.emotion-0:last-child {
  margin-bottom: -0.5rem;
}

@media screen and (max-width:479px) {
  .emotion-0 {
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
  }
}

<div
  class="emotion-0 emotion-1 emotion-2 emotion-3 fp-Box fp-Flex fp-Columns"
>
  Hello world
</div>
`;

exports[`props should render correctly when minBreakpoint is mobile 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-13 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-12 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.5rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-12:last-child {
  margin-bottom: -0.5rem;
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

<div
  class="emotion-12 emotion-13 emotion-1 emotion-2 fp-Box fp-Flex fp-Columns"
>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
</div>
`;

exports[`props should render correctly when minBreakpoint is tablet 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-13 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-12 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.5rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-12:last-child {
  margin-bottom: -0.5rem;
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

@media screen and (max-width:479px) {
  .emotion-0 {
    width: 100%;
  }
}

<div
  class="emotion-12 emotion-13 emotion-1 emotion-2 fp-Box fp-Flex fp-Columns"
>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
</div>
`;

exports[`props should render correctly with CSS props 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-13 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-12 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.5rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-12:last-child {
  margin-bottom: -0.5rem;
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

@media (max-width:768px) {
  .emotion-0 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 100%;
  }
}

.emotion-15 {
  color: #574feb !important;
}

.emotion-2 {
  background-color: #9e46d8 !important;
}

<div
  class="emotion-12 emotion-13 emotion-1 emotion-15 fp-Box fp-Flex fp-Columns"
>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-5 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-5 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-5 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
</div>
`;

exports[`props spreads renders correctly when all columns have sizes 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-13 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-12 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.5rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-12:last-child {
  margin-bottom: -0.5rem;
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

.emotion-0 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  width: 50%;
}

@media screen and (max-width:767px) {
  .emotion-0 {
    width: 100%;
  }
}

@media screen and (max-width:479px) {
  .emotion-0 {
    width: 100%;
  }
}

.emotion-3 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

.emotion-3 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  width: 25%;
}

@media screen and (max-width:767px) {
  .emotion-3 {
    width: 100%;
  }
}

@media screen and (max-width:479px) {
  .emotion-3 {
    width: 100%;
  }
}

.emotion-6 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

.emotion-6 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  width: 16.666666666666664%;
}

@media screen and (max-width:767px) {
  .emotion-6 {
    width: 100%;
  }
}

@media screen and (max-width:479px) {
  .emotion-6 {
    width: 100%;
  }
}

.emotion-9 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

.emotion-9 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  width: 8.333333333333332%;
}

@media screen and (max-width:767px) {
  .emotion-9 {
    width: 100%;
  }
}

@media screen and (max-width:479px) {
  .emotion-9 {
    width: 100%;
  }
}

<div
  class="emotion-12 emotion-13 emotion-1 emotion-2 fp-Box fp-Flex fp-Columns"
>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-3 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-6 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-9 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
</div>
`;

exports[`props spreads renders correctly when one of the columns does not have a size 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-13 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-12 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.5rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-12:last-child {
  margin-bottom: -0.5rem;
}

.emotion-6 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

@media (max-width:768px) {
  .emotion-6 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 100%;
  }
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

.emotion-0 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  width: 50%;
}

@media screen and (max-width:767px) {
  .emotion-0 {
    width: 100%;
  }
}

@media screen and (max-width:479px) {
  .emotion-0 {
    width: 100%;
  }
}

.emotion-3 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

.emotion-3 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  width: 25%;
}

@media screen and (max-width:767px) {
  .emotion-3 {
    width: 100%;
  }
}

@media screen and (max-width:479px) {
  .emotion-3 {
    width: 100%;
  }
}

.emotion-9 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

.emotion-9 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  width: 8.333333333333332%;
}

@media screen and (max-width:767px) {
  .emotion-9 {
    width: 100%;
  }
}

@media screen and (max-width:479px) {
  .emotion-9 {
    width: 100%;
  }
}

<div
  class="emotion-12 emotion-13 emotion-1 emotion-2 fp-Box fp-Flex fp-Columns"
>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-3 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-6 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-9 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
</div>
`;

exports[`props spreads renders correctly when the first column does not have a size 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-13 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-12 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.5rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-12:last-child {
  margin-bottom: -0.5rem;
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

@media (max-width:768px) {
  .emotion-0 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 100%;
  }
}

.emotion-3 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

.emotion-3 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  width: 25%;
}

@media screen and (max-width:767px) {
  .emotion-3 {
    width: 100%;
  }
}

@media screen and (max-width:479px) {
  .emotion-3 {
    width: 100%;
  }
}

.emotion-6 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

.emotion-6 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  width: 16.666666666666664%;
}

@media screen and (max-width:767px) {
  .emotion-6 {
    width: 100%;
  }
}

@media screen and (max-width:479px) {
  .emotion-6 {
    width: 100%;
  }
}

.emotion-9 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

.emotion-9 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  width: 8.333333333333332%;
}

@media screen and (max-width:767px) {
  .emotion-9 {
    width: 100%;
  }
}

@media screen and (max-width:479px) {
  .emotion-9 {
    width: 100%;
  }
}

<div
  class="emotion-12 emotion-13 emotion-1 emotion-2 fp-Box fp-Flex fp-Columns"
>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-3 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-6 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-9 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
</div>
`;

exports[`props spreads renders correctly when there is space still left on the right 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-6 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.5rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-6:last-child {
  margin-bottom: -0.5rem;
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

.emotion-0 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  width: 50%;
}

@media screen and (max-width:767px) {
  .emotion-0 {
    width: 100%;
  }
}

@media screen and (max-width:479px) {
  .emotion-0 {
    width: 100%;
  }
}

.emotion-3 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

.emotion-3 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  width: 25%;
}

@media screen and (max-width:767px) {
  .emotion-3 {
    width: 100%;
  }
}

@media screen and (max-width:479px) {
  .emotion-3 {
    width: 100%;
  }
}

<div
  class="emotion-6 emotion-7 emotion-1 emotion-2 fp-Box fp-Flex fp-Columns"
>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-3 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
</div>
`;

exports[`props variable offsets renders correctly when all spreadOffsets are specified 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-3 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.5rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-3:last-child {
  margin-bottom: -0.5rem;
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

.emotion-0 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  width: 91.66666666666666%;
}

@media screen and (max-width:1439px) {
  .emotion-0 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 83.33333333333334%;
  }
}

@media screen and (max-width:1199px) {
  .emotion-0 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 75%;
  }
}

@media screen and (max-width:1023px) {
  .emotion-0 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 66.66666666666666%;
  }
}

@media screen and (max-width:767px) {
  .emotion-0 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 58.333333333333336%;
  }
}

@media screen and (max-width:479px) {
  .emotion-0 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 50%;
  }
}

.emotion-0 {
  margin-left: 8.333333333333332%;
}

@media screen and (max-width:1439px) {
  .emotion-0 {
    margin-left: 16.666666666666664%;
  }
}

@media screen and (max-width:1199px) {
  .emotion-0 {
    margin-left: 25%;
  }
}

@media screen and (max-width:1023px) {
  .emotion-0 {
    margin-left: 33.33333333333333%;
  }
}

@media screen and (max-width:767px) {
  .emotion-0 {
    margin-left: 41.66666666666667%;
  }
}

@media screen and (max-width:479px) {
  .emotion-0 {
    margin-left: 50%;
  }
}

<div
  class="emotion-3 emotion-4 emotion-1 emotion-2 fp-Box fp-Flex fp-Columns"
>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
</div>
`;

exports[`props variable offsets renders correctly when only mobile spread offset is specified 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-3 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.5rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-3:last-child {
  margin-bottom: -0.5rem;
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

@media screen and (max-width:479px) {
  .emotion-0 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 66.66666666666666%;
  }
}

<div
  class="emotion-3 emotion-4 emotion-1 emotion-2 fp-Box fp-Flex fp-Columns"
>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
</div>
`;

exports[`props variable offsets renders correctly when only spreadOffset and spreadDesktopOffset is specified 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-3 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.5rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-3:last-child {
  margin-bottom: -0.5rem;
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

.emotion-0 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  width: 83.33333333333334%;
}

@media screen and (max-width:1023px) {
  .emotion-0 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 66.66666666666666%;
  }
}

@media screen and (max-width:767px) {
  .emotion-0 {
    width: 100%;
  }
}

@media screen and (max-width:479px) {
  .emotion-0 {
    width: 100%;
  }
}

.emotion-0 {
  margin-left: 16.666666666666664%;
}

@media screen and (max-width:1023px) {
  .emotion-0 {
    margin-left: 33.33333333333333%;
  }
}

@media screen and (max-width:767px) {
  .emotion-0 {
    margin-left: 0;
  }
}

@media screen and (max-width:479px) {
  .emotion-0 {
    margin-left: 0;
  }
}

<div
  class="emotion-3 emotion-4 emotion-1 emotion-2 fp-Box fp-Flex fp-Columns"
>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
</div>
`;

exports[`props variable offsets renders correctly when only tablet spread offset is specified 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-3 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.5rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-3:last-child {
  margin-bottom: -0.5rem;
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

@media screen and (max-width:767px) {
  .emotion-0 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 66.66666666666666%;
  }
}

@media screen and (max-width:479px) {
  .emotion-0 {
    width: 100%;
  }
}

<div
  class="emotion-3 emotion-4 emotion-1 emotion-2 fp-Box fp-Flex fp-Columns"
>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
</div>
`;

exports[`props variable sizes renders correctly when all spreads are specified 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-6 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.5rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-6:last-child {
  margin-bottom: -0.5rem;
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

.emotion-0 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  width: 91.66666666666666%;
}

@media screen and (max-width:1439px) {
  .emotion-0 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 83.33333333333334%;
  }
}

@media screen and (max-width:1199px) {
  .emotion-0 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 75%;
  }
}

@media screen and (max-width:1023px) {
  .emotion-0 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 66.66666666666666%;
  }
}

@media screen and (max-width:767px) {
  .emotion-0 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 58.333333333333336%;
  }
}

@media screen and (max-width:479px) {
  .emotion-0 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 50%;
  }
}

.emotion-3 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

.emotion-3 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  width: 8.333333333333332%;
}

@media screen and (max-width:1439px) {
  .emotion-3 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 16.666666666666664%;
  }
}

@media screen and (max-width:1199px) {
  .emotion-3 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 25%;
  }
}

@media screen and (max-width:1023px) {
  .emotion-3 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 33.33333333333333%;
  }
}

@media screen and (max-width:767px) {
  .emotion-3 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 41.66666666666667%;
  }
}

@media screen and (max-width:479px) {
  .emotion-3 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 50%;
  }
}

<div
  class="emotion-6 emotion-7 emotion-1 emotion-2 fp-Box fp-Flex fp-Columns"
>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-3 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
</div>
`;

exports[`props variable sizes renders correctly when only mobile spread is specified 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-6 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.5rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-6:last-child {
  margin-bottom: -0.5rem;
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

@media screen and (max-width:479px) {
  .emotion-0 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 66.66666666666666%;
  }
}

.emotion-3 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

@media screen and (max-width:479px) {
  .emotion-3 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 33.33333333333333%;
  }
}

<div
  class="emotion-6 emotion-7 emotion-1 emotion-2 fp-Box fp-Flex fp-Columns"
>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-3 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
</div>
`;

exports[`props variable sizes renders correctly when only spread and spreadDesktop is specified 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-6 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.5rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-6:last-child {
  margin-bottom: -0.5rem;
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

.emotion-0 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  width: 83.33333333333334%;
}

@media screen and (max-width:1023px) {
  .emotion-0 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 66.66666666666666%;
  }
}

@media screen and (max-width:767px) {
  .emotion-0 {
    width: 100%;
  }
}

@media screen and (max-width:479px) {
  .emotion-0 {
    width: 100%;
  }
}

.emotion-3 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

.emotion-3 {
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  width: 16.666666666666664%;
}

@media screen and (max-width:1023px) {
  .emotion-3 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 33.33333333333333%;
  }
}

@media screen and (max-width:767px) {
  .emotion-3 {
    width: 100%;
  }
}

@media screen and (max-width:479px) {
  .emotion-3 {
    width: 100%;
  }
}

<div
  class="emotion-6 emotion-7 emotion-1 emotion-2 fp-Box fp-Flex fp-Columns"
>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-3 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
</div>
`;

exports[`props variable sizes renders correctly when only tablet spread is specified 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-6 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.5rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-6:last-child {
  margin-bottom: -0.5rem;
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

@media screen and (max-width:767px) {
  .emotion-0 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 66.66666666666666%;
  }
}

@media screen and (max-width:479px) {
  .emotion-0 {
    width: 100%;
  }
}

.emotion-3 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

@media screen and (max-width:767px) {
  .emotion-3 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 33.33333333333333%;
  }
}

@media screen and (max-width:479px) {
  .emotion-3 {
    width: 100%;
  }
}

<div
  class="emotion-6 emotion-7 emotion-1 emotion-2 fp-Box fp-Flex fp-Columns"
>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-3 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
</div>
`;

exports[`theming Columns.Column.base should render correctly 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-13 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-12 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.5rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-12:last-child {
  margin-bottom: -0.5rem;
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

@media (max-width:768px) {
  .emotion-0 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 100%;
  }
}

.emotion-0 {
  background-color: #ff0000;
}

<div
  class="emotion-12 emotion-13 emotion-1 emotion-2 fp-Box fp-Flex fp-Columns"
>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
</div>
`;

exports[`theming Columns.base should render correctly 1`] = `
.emotion-1 {
  margin: unset;
  padding: unset;
  border: unset;
  background: unset;
  font: unset;
  font-family: inherit;
  font-size: 100%;
  box-sizing: border-box;
}

.emotion-1:focus:not(:focus-visible) {
  outline: none;
}

.emotion-13 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.emotion-0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  max-width: 100%;
  padding: 0.5rem;
}

@media (max-width:768px) {
  .emotion-0 {
    -webkit-flex: none;
    -ms-flex: none;
    flex: none;
    width: 100%;
  }
}

.emotion-12 {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-top: -0.5rem;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-12:last-child {
  margin-bottom: -0.5rem;
}

.emotion-12 {
  background-color: #ff0000;
}

<div
  class="emotion-12 emotion-13 emotion-1 emotion-2 fp-Box fp-Flex fp-Columns"
>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
  <div
    class="emotion-0 emotion-1 emotion-2 fp-Box fp-ColumnsColumn"
  >
    Column
  </div>
</div>
`;
